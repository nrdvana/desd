# This is a simple example of how to run an app 'myapp' with its own instance
# of mysql.  This config assumes you are running desd as a non-root user and
# so everything needs to be written in user-allowed places.
---
env:
  mysql_socket: /home/myapp/mysql.sock
  mysql_port: 3307

# Define a global logger for all services (and desd itself)
# This program relays it all to syslog.
logger: logger -p daemon.myapp

# Desd monitors the mysql instance and restarts it if it dies.
service myapp-mysql:
  env:
    mysql_dir: /home/myapp/mysql

  # Note, you may need more custom arguments to mysql depending on how many things
  # in your /etc/mysql/my.cnf need overridden.
  action start: mysqld --datadir=$mysql_dir --server-id=1
    --port=$mysql_port --socket=$mysql_socket --pid-file=$mysql_dir/mysqld.pid
    --log-error=/dev/stderr

# It also monitors/restarts the app
# These arguments are examples of what you might need to do to a service
# to make it run attached to a service monitor.
service myapp:
  action start: myapp --no-daemonize --log-to-stderr --mysql-socket=$mysql_socket

# What you get for free (defaults implied by this config):
#  * a "stop" action for each service which performs a graceful kill
#  * a "restart" action which runs a stop, then start
#  * services automatically start when desd starts, and are restarted
#    if they exit for any reason other than "stop" action.
#  * automatic restart of the logger
#  * upon receiving sigterm, will gracefully shut down both services,
#    and then the logger, and then exit.
